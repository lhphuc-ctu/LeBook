@model IEnumerable<Category>

@{
    ViewData["Title"] = "Thể loại đã xoá";
}

<main>
    <header class="page-header page-header-compact page-header-light border-bottom bg-white mb-4">
        <div class="container-fluid px-4">
            <div class="page-header-content">
                <div class="row align-items-center justify-content-between pt-3">
                    <div class="col-auto mb-3">
                        <h1 class="page-header-title">
                            <div class="page-header-icon"><i data-feather="list"></i></div>
                            Danh sách thể loại đã xoá
                        </h1>
                    </div>
                    <div class="col-12 col-xl-auto mb-3">
                        <a class="btn btn-sm btn-light text-black" asp-action="Index">
                            <i class="me-1" data-feather="corner-up-left"></i>
                            Trở về
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <!-- Main page content-->
    <div class="container-fluid px-4">
        <div class="card">
            <div class="card-body">
                <table id="datatablesSimple">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.DisplayOrder)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Name)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.CreatedAt)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.LastUpdatedAt)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.DeletedAt)
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.DisplayOrder)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Name)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.CreatedAt)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.LastUpdatedAt)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.DeletedAt)
                            </th>
                            <th></th>
                        </tr>
                    </tfoot>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DisplayOrder)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CreatedAt)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.LastUpdatedAt)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DeletedAt)
                                </td>
                                <td>
                                    <div class="d-flex flex-row">
                                        @if ((AuthorizationService.AuthorizeAsync(User, "canAction")).Result.Succeeded)
                                        {
                                            <a class="btn btn-outline-success btn-sm" href="#" onclick="return submitRestore(event,'@item.Id','Thể loại')">Phục hồi</a>
                                            <form asp-action="Restore" id="Restore+@item.Id">
                                                <input type="hidden" value="@item.Id" name="id" id="id" />
                                            </form>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</main>
@section Scripts {
    <script>
        window.addEventListener('DOMContentLoaded', event => {
            let dataTable = new simpleDatatables.DataTable("#CategoryTable", {
                labels: {
                    placeholder: "Tìm kiếm...",
                    searchTitle: "Tìm trong bảng",
                    perPage: "mẫu tin trên trang",
                    noRows: "Không có dữ liệu",
                    info: "Hiển thị mẫu tin {start} tới {end} trong {rows} mẫu tin",
                    noResults: "Không tìm thấy dữ liệu!",
                }
            });
        });
    </script>
}